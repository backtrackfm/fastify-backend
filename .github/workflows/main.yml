name: AWS Pipeline
on:
  push:
    branches: [main]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1
      - name: Checkout to repo
        uses: actions/checkout@v2

        # Step 2
      - name: Set AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

        # Step 3
      - name: Create CodeDeploy Deployment
        id: deploy
        run: |
          deployment_id=$(aws deploy create-deployment \
            --application-name backtrack-backend \
            --deployment-group-name backtrack-backend-cd1 \
            --deployment-config-name CodeDeployDefault.OneAtATime \
            --github-location repository=${{ github.repository }},commitId=${{ github.sha }} \
            --query "deploymentId" --output text)
          echo "Deployment ID: $deployment_id"
          echo "::set-output name=deployment_id::$deployment_id"

      - name: Update GH Deployment Status (Pending)
        run: |
          deployment_id="${{ steps.deploy.outputs.deployment_id }}"
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d '{"state": "pending", "log_url": "https://github.com/'${{ github.repository }}'/actions/runs/'${{ github.run_id }}'", "description": "Deployment in progress"}' \
            "https://api.github.com/repos/${{ github.repository }}/deployments/${deployment_id}/statuses"


      - name: Verify CodeDeploy Deployment Status
        id: check_deployment
        run: |
          deployment_id="${{ steps.deploy.outputs.deployment_id }}"
          max_wait_time=300  # Maximum wait time in seconds
          start_time=$(date +%s)
          while true; do
            deployment_status=$(aws deploy get-deployment --deployment-id "$deployment_id" --query "deploymentInfo.status" --output text)
            echo "Deployment status: $deployment_status"

            if [[ "$deployment_status" == "Succeeded" ]]; then
              echo "CodeDeploy deployment succeeded after $elapsed_time seconds"
              curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -H "Accept: application/vnd.github.v3+json" \
                -d '{"state": "success", "log_url": "https://github.com/'${{ github.repository }}'/actions/runs/'${{ github.run_id }}'", "description": "Deployment succeeded"}' \
                "https://api.github.com/repos/${{ github.repository }}/deployments/${deployment_id}/statuses"
              break
            fi

            current_time=$(date +%s)
            elapsed_time=$((current_time - start_time))

            if [[ $elapsed_time -ge $max_wait_time ]]; then
              echo "Max wait time exceeded. CodeDeploy deployment still InProgress."
              exit 1
            fi

            sleep 10  # Adjust the sleep duration as needed
          done
